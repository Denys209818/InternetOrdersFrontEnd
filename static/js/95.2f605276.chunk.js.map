{"version":3,"file":"static/js/95.2f605276.chunk.js","mappings":"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","sources":["components/custom/Card/Card.tsx","tools/randomFunc.ts","components/custom/ReceiptCreator/ReceiptCreator.tsx","components/custom/CheckBox/index.ts","components/custom/CheckBox/CheckBox.tsx","components/custom/IngredientList/IngredientList.tsx","components/custom/Receipt/index.ts","components/custom/Receipt/Receipt.tsx","components/CatalogPage/index.ts","components/CatalogPage/CatalogPage.tsx","components/MainPage/styles.ts","components/custom/Button/Button.tsx","components/custom/Button/index.ts"],"sourcesContent":["type Option = {\n    optionTitle: string;\n    optionPrice: string;\n};\n\nexport type CardType = {\n    title: string;\n    imageSrc: string;\n    options: Option[];\n};\n\nexport const Card: React.FC<CardType> = ({ title, options, imageSrc }) => {\n    return (\n    <div className={`\n        block\n        min-[1000px]:col-span-3\n        min-[744px]:col-span-4\n        col-span-2\n        border-2\n        overflow-hidden\n        rounded-t-2xl\n        `}>\n        <div className=\"relative w-full pb-[105.6%] overflow-hidden\">\n            <img\n                src={imageSrc}\n                alt=\"Product\"\n                className={`\n                    absolute\n                    top-0 \n                    left-0 \n                    size-full \n                    object-cover \n                    duration-150 \n                    hover:scale-125 \n                    cursor-pointer\n                `}\n            />\n        </div>\n\n        <div className={`\n            flex\n            flex-col\n            min-[1440px]:p-4\n            p-3\n            gap-4\n            `}>\n            <h3 className={`\n                min-[1440px]:text-headerLessTablet\n                text-cardTitlePC\n                font-literata\n                italic\n            `}>{title}</h3>\n\n            <div className=\"flex flex-col gap-2\">\n                {options.map(opt => (\n                    <div className=\"flex justify-between\" key={opt.optionTitle + opt.optionPrice}>\n                        <p className={`\n                            block\n                            font-lato\n                            min-[1440px]:text-cardProp\n                            text-cardPropPC\n                            text-[#525A63]\n                        `}>\n                            {opt.optionTitle}\n                        </p>\n\n                        <p className={`\n                            block\n                            min-[1440px]:text-cardPrice\n                            text-cardPricePC\n                            font-literata\n                        `}>\n                            {opt.optionPrice}грн\n                        </p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>);\n}","export const getRandomInt = (min: number, max: number) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}","import { useLayoutEffect, useState } from \"react\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport Button from \"../Button\";\n\nexport type ReceiptProp = {\n    id: number;\n    title: string;\n    price: number;\n    disabled?: boolean;\n    isSize?: boolean;\n};\n\nexport type ReceiptType = {\n    size: ReceiptProp;\n    items: ReceiptProp[];\n};\n\nexport const ReceiptCreator: React.FC<ReceiptType> = ({ size, items }) => {\n    const [sum, setSum] = useState(0);\n\n    useLayoutEffect(() => {\n        setSum(items.reduce((prev, curr) => prev + curr.price, 0) + size.price);\n    }, [items, size]);\n\n    return (\n    <div className=\"border-2 rounded-t-2xl\">\n        <div className=\"w-full py-3\">\n            <div className=\"mx-auto w-[206px]\">\n                <div className=\"relative size-full pb-[130%]\">\n                    <div className={`\n                        absolute\n                        top-0\n                        left-0\n                        size-full\n                        bg-cover\n                        bg-[url('/src/images/Cooker.svg')]\n                        `}>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"block border-t-2 bg-white p-4\">\n            <div className=\"flex flex-col gap-6\">\n                <h3 className=\"min-[1440px]:text-headerLessTablet text-list font-literata italic\">Мій рецепт</h3>\n\n                <div className=\"flex gap-2 items-center\">\n                    <p className=\"block text-cardPrice font-literata italic text-[#1F2933]\">Розмір:</p> \n\n                    <p className=\"flex justify-between items-center w-full\">\n                        <span className={`\n                            block\n                            min-[1440px]:text-paragraph\n                            text-cardPropBiggerPC\n                            text-[#1F2933]\n                            font-lato\n                        `}>\n                            {size.title}\n                        </span>\n\n                        <span className={`\n                            block\n                            text-[#525A63]\n                            italic\n                            min-[1440px]:text-cardProp\n                            text-cardPropPC\n                            font-literata`}>\n                                {size.price} грн\n                            </span>\n                    </p> \n                </div>\n\n                <div className=\"block\">\n                    <p className=\"block text-cardPrice font-literata italic text-[#1F2933]\">Обрані:</p> \n\n                    <p className=\"flex items-center justify-between pt-[14px]\">\n                        <span className=\"block text-cardPropBiggerPC min-[1440px]:text-paragraph text-[#525A63]\">Капуста, огірок, помідор</span>\n                        <span className=\"block text-required italic text-[#525A63]\">Обов'язково</span>\n                    </p>\n                    \n                    <ul className=\"list-none p-0 pl-2\">\n                        {items.map(item => (\n                            <li className=\"pt-[14px]\" key={getRandomInt(1, 100) + item.price + item.title}>\n                                <p className=\"flex justify-between items-center w-full\">\n                                    <span className={`\n                                        block\n                                        min-[1440px]:text-paragraph\n                                        text-cardPropBiggerPC\n                                        text-[#1F2933]\n                                        font-lato\n                                    `}>\n                                        {item.title}\n                                    </span>\n\n                                    <span className={`\n                                        block\n                                        text-[#525A63]\n                                        italic\n                                        min-[1440px]:text-cardProp\n                                        text-cardPropPC\n                                        font-literata\n                                    `}>\n                                        +{item.price}грн\n                                    </span>\n                                </p> \n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"block\">\n                    <p className={`\n                        flex\n                        items-center\n                        gap-[2px]\n                        px-3\n                        py-1\n                        text-[#525A63]\n                        text-cook\n                        font-lato\n                        hover:cursor-pointer\n                    `}>\n                        <span className=\"block\">КБЖУ всього продукту</span>\n\n                        <span className=\"block p-1 size-8\">\n                            <span className=\"block size-full bg-[url('/src/images/Arrow_drop_down.svg')]\"></span>\n                        </span>\n                    </p>\n                </div>\n\n                <div className=\"block\">\n                    <p className=\"flex justify-end items-end gap-2 w-full text-right\">\n                        <span className=\"block text-cook text-[#1F2933] font-lato\">Разом: </span>\n                        <span className=\"block text-cardPrice text-[#1F2933] font-literata italic\">{sum}грн</span>\n                    </p>\n                </div>\n\n                <div className=\"block\">\n                    <Button\n                        title=\"Замовити\"\n                        type=\"button\"\n                        sizeBtn=\"huge\"\n                        background=\"black\"\n                    />\n\n                    <p className=\"block pt-3 text-cook text-[#525A63] font-lato\">\n                        Максимальна кількість інгредієнтів  - 7\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","import { CheckBox } from \"./CheckBox\";\n\nexport default CheckBox;","type CheckBoxType = {\n    active: boolean;\n    setActive: () => void;\n};\n\nexport const CheckBox: React.FC<CheckBoxType> = ({ active, setActive }) => {\n    return (<>\n        <div className={`\n                flex\n                justify-center\n                items-center\n                size-11\n                border-2\n                border-black\n                hover:cursor-pointer\n            `}\n            onClick={setActive}\n        >\n            {active && <div className=\"block size-6 bg-[url('/src/images/CheckPoint.svg')] bg-cover\"></div>}\n        </div> \n    </>);\n}","import { useEffect, useState } from \"react\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport CheckBox from \"../CheckBox\";\nimport { ReceiptProp } from \"../ReceiptCreator/ReceiptCreator\";\nimport React from \"react\";\n\nexport type IngredientListType = {\n    title: string;\n    options: ReceiptProp[];\n    allowMultiple?: boolean;\n    addToWish: (prop: ReceiptProp) => boolean;\n};\n\nexport const IngredientList: React.FC<IngredientListType> = ({ title, options, allowMultiple = false, addToWish }) => {\n    const [activeCheck, setActiveCheck] = useState<String>('');\n\n    useEffect(() =>  {\n        if (allowMultiple) {\n            setActiveCheck('');\n        } else {\n            if (options[0]) {\n               setActiveCheck(options[0].id.toString());\n            }\n        }\n    }, [allowMultiple, options]);\n\n    const setActiveCheckHandler = (id: number) => {\n        const activeOption = options.find(el => el.id === id);\n        const prevOption = options.find(el => el.id === parseInt(activeCheck.toString()));\n        const idString = id.toString();\n\n        if (allowMultiple) {\n            let changed = true;\n\n            if (activeOption) {\n                changed = addToWish(activeOption);\n            }\n\n            if (changed) {\n                if (activeCheck.includes(idString)) {\n                    const ind = activeCheck.indexOf(`[${idString}]`);\n    \n                    setActiveCheck(prev => prev.slice(0, ind) + prev.slice(ind + 4));\n                } else {\n                    setActiveCheck(prev => prev + `[${idString}]`);\n                }\n            }\n        } else {\n            if (activeOption && prevOption) {\n                if (!activeOption.isSize) {\n                    addToWish(prevOption);\n                }\n                \n                addToWish(activeOption);\n            }\n\n            if (idString !== activeCheck) {\n                setActiveCheck(idString);\n            }\n        }\n    };\n\n    return (<div>\n        {title && <h4 className=\"font-literata italic text-list\">{title}</h4>}\n        \n        <ul className=\"flex flex-col gap-2 pt-2\">\n            {options.map(opt => (\n                <li className=\"flex justify-between items-center\" key={getRandomInt(1, 1000) + opt.price + opt.title}>\n                    <div className=\"block py-2\">\n                        <p className={\"font-lato text-paragraph \" + (opt.disabled ? \"text-[#525A63]\" : \"\")}>{opt.title}</p>\n                    </div>\n\n                    <div className=\"flex gap-2\">\n                        <p className=\"block py-3 text-[#525A63] italic text-cardProp font-literata\">\n                            {opt.price > 0 ? `${opt.price} грн` : ''}\n                        </p>\n\n                        <CheckBox\n                            active={activeCheck.includes(opt.id.toString())}\n                            setActive={() => setActiveCheckHandler(opt.id)}\n                        />\n                    </div>\n                </li>\n            ))}\n        </ul>\n    </div>);\n};","import { Receipt } from \"./Receipt\";\n\nexport default Receipt;","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { ReceiptCreator, ReceiptProp } from \"../ReceiptCreator/ReceiptCreator\";\nimport { IngredientList, IngredientListType } from \"../IngredientList/IngredientList\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport data from './data/category.json';\n\nexport const Receipt = () => {\n    const [choosenProps, setChoosenProps] = useState<ReceiptProp[]>([]);\n    const [size, setSize] = useState<ReceiptProp>({\n        id: -1,\n        title: 'Не визначено',\n        price: 0,\n    });\n\n    const addShawermaComponent = useCallback((prop: ReceiptProp) => {\n        let isEdited = true;\n\n        setChoosenProps(prev => {\n            const item = prev.find(el => el.id === prop.id);\n\n            if (prev.length === 7 && !item) {\n                isEdited = false;\n                return prev;\n            }\n\n            if (prop.isSize) {\n                setSize(prop);\n\n                return prev;\n            }\n            \n            if (item) {\n                return prev.filter(el => el.id !== prop.id);\n            } else {\n                return [...prev, prop];\n            }\n        });\n\n        return isEdited;\n    }, []);\n\n    const catalogCreator: IngredientListType[] = useMemo(() => {\n        const catalogData:IngredientListType[] = [];\n\n        for (const dataItem of data) {\n            catalogData.push({\n                ...dataItem,\n                addToWish: addShawermaComponent\n            });\n        }\n\n        return  catalogData;\n    }, [addShawermaComponent]);\n\n    const catalogItems = useMemo(() => catalogCreator.map(catItem => (\n        <IngredientList\n            key={catItem.title + getRandomInt(1, 1000)}\n            {...catItem}\n        />\n    )), [catalogCreator])\n\n    useEffect(() => {\n        for (const catCr of catalogCreator) {\n            if (catCr.options.length > 0 && !catCr.allowMultiple) {\n                if (catCr.title || (catCr.options.length > 0 && catCr.options[0].isSize)) {\n                    addShawermaComponent(catCr.options[0]);\n                }\n            }\n        }\n    }, [addShawermaComponent, catalogCreator]);\n\n\n    return (<div className=\"grid min-[744px]:grid-cols-12 grid-cols-4 min-[1440px]:gap-x-5 gap-x-4 gap-y-[52px]\">\n        <h2 className={`\n            min-[1440px]:text-headerLessMain\n            min-[744px]:text-headerLessTablet\n            text-paragraph\n            font-oswald\n            uppercase\n            min-[744px]:col-span-12\n            col-span-4\n        `}>\n            Або будь творцем – Складай свій власний рецепт!\n        </h2>\n\n        <div className=\"min-[1440px]:col-span-4 min-[1000px]:col-span-5 min-[744px]:col-span-6 col-span-4\">\n            <ReceiptCreator\n                size={size}\n                items={choosenProps}\n            />\n        </div>\n\n        <div className=\"min-[1440px]:col-span-4 min-[1000px]:col-span-7 min-[744px]:col-span-6 col-span-4\">\n            <div className=\"block border-2\">\n                <div className=\"bg-[#FF8080] border-b-2 p-2\">\n                    <h4 className=\"font-literata text-black italic text-list\">Обери інгредіенти</h4>\n                </div>\n\n                <div className=\"flex flex-col gap-6 px-5 py-6 bg-white\">\n                    {catalogItems}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"min-[1440px]:block hidden col-span-4\">\n            <div className=\"flex size-full justify-center items-center\">\n                <div className=\"block w-[210px]\">\n                    <div className=\"block pb-[258%] bg-[url('/src/images/Vertel.svg')] bg-cover\"></div>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","import { CatalogPage } from \"./CatalogPage\";\n\nexport default CatalogPage;","import { useNavigate } from \"react-router-dom\";\nimport Button from \"../custom/Button\";\nimport * as Styles from '../MainPage/styles';\nimport { Card } from \"../custom/Card/Card\";\nimport Receipt from \"../custom/Receipt\";\n\nexport const CatalogPage: React.FC = () => {\n    const sectionStyles = `\n        ${Styles.sectionLargeStyle}\n        ${Styles.sectionPhoneStyle}\n        ${Styles.sectionSmallphoneStyle}\n        ${Styles.sectionStyle}\n        ${Styles.sectionTabletStyle}\n    `;\n\n    const navigate = useNavigate();\n\n    return (<main className=\"relative pt-[90px] bg-[#FFE9DE]\">\n        <section className={`max-w-[1440px] m-auto ${sectionStyles}`}>\n            <Button image=\"Back.svg\" background=\"transparent\" onClickHandler={() => navigate(-1)} />\n        </section>\n\n        <section className={`max-w-[1440px] pt-3 m-auto ${sectionStyles}`}>\n            <h1 className={`\n                min-[1440px]:text-headerLess\n                font-oswald\n                text-headerLessMain\n                `}>\n                    Шаурма\n            </h1>\n        </section>\n\n        <section className={`max-w-[1440px] pb-[66px] pt-12 m-auto ${sectionStyles}`}>\n            <h3 className=\"text-headerLessTablet font-oswald uppercase font-medium\">Обирай наші смаки</h3>\n\n            <div className=\"grid min-[744px]:grid-cols-12 grid-cols-4 gap-x-4 gap-y-6 pt-3\">\n                <Card \n                    title=\"Класична\"\n                    imageSrc=\"images/classicial.jpg\"\n                    options={[\n                        {\n                            optionTitle: 'Велика',\n                            optionPrice: '100'\n                        },\n                        {\n                            optionTitle: 'Маленька',\n                            optionPrice: '75'\n                        },\n                    ]}\n                />\n\n                <Card \n                    title=\"З яловичиною\"\n                    imageSrc=\"images/beaf.jpg\"\n                    options={[\n                        {\n                            optionTitle: 'Велика',\n                            optionPrice: '100'\n                        },\n                        {\n                            optionTitle: 'Маленька',\n                            optionPrice: '75'\n                        },\n                    ]}\n                />\n\n                <Card \n                    title=\"З ковбасками\"\n                    imageSrc=\"images/sausage.jpg\"\n                    options={[\n                        {\n                            optionTitle: 'Велика',\n                            optionPrice: '100'\n                        },\n                        {\n                            optionTitle: 'Маленька',\n                            optionPrice: '75'\n                        },\n                    ]}\n                />\n\n                <Card \n                    title=\"З криветками\"\n                    imageSrc=\"images/shrimp.jpg\"\n                    options={[\n                        {\n                            optionTitle: 'Велика',\n                            optionPrice: '100'\n                        },\n                        {\n                            optionTitle: 'Маленька',\n                            optionPrice: '75'\n                        },\n                    ]}\n                />\n            </div>\n        </section>\n\n        <section className={`bg-[#9CC2FF] w-full pt-12 pb-[88px] ${sectionStyles} min-[375px]:px-[12px] border-t-2`}>\n            <Receipt />\n        </section>\n    </main>);\n}","export const sectionLargeStyle = \"min-[1440px]:px-10\";\nexport const sectionStyle = \"min-[1000px]:px-6\";\nexport const sectionTabletStyle = \"min-[744px]:px-[16px]\";\nexport const sectionPhoneStyle = \"min-[480px]:px-[16px]\";\nexport const sectionSmallphoneStyle = \"min-[375px]:px-[16px]\";\n\nexport const forkBlue = `\n        min-[1440px]:translate-x-negative-left-fork \n        min-[1000px]:translate-x-negative-left-fork-main\n        min-[375px]:translate-x-negative-left-fork-tablet\n        min-[1000px]:translate-y-negative-top-fork \n        min-[744px]:translate-y-negative-top-fork-tablet\n        min-[480px]:translate-y-negative-top-phonefork \n        min-[375px]:translate-y-negative-top-smallphonefork\n        min-[1440px]:w-[215px]\n        min-[744px]:w-[105px]\n        min-[1000px]:w-[139px]\n        min-[480px]:w-[100px]\n        min-[375px]:w-[74px]\n        `;\n\nexport const titleHead = `\n        min-[1440px]:text-headerHuge \n        min-[1000px]:text-headerHugeMain\n        min-[744px]:text-headerHugeTablet\n        min-[375px]:text-headerHugePhone\n    `;\n\nexport const minTitleHead = `\n        min-[1440px]:text-headerLess\n        min-[1000px]:text-headerLessMain\n        min-[375px]:text-headerLessTablet\n    `;\n\nexport const cardChoice = `\n        min-[1440px]:text-cardChoice\n        min-[1000px]:text-cardChoiceMain\n        min-[375px]:text-cardChoiceTablet\n    `;\n\nexport const betterMarkupLeft = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-7\n        min-[1000px]:col-start-1 min-[1000px]:col-end-8\n        min-[744px]:col-start-1 min-[744px]:col-end-10\n        min-[375px]:col-span-4\n    `;\n\nexport const betterMarkupRight = `\n        min-[1440px]:col-start-7 min-[1440px]:col-end-13\n        min-[744px]:col-start-1 min-[744px]:col-end-13\n        min-[375px]:col-span-4\n    `;\n\nexport const imgElse = `\n        min-[1440px]:size-[325px]\n        min-[1000px]:size-[300px]\n        min-[744px]:size-[215px]\n        min-[480px]:size-[200px]\n        min-[375px]:size-[163px]\n    `;\n\nexport const imgElseTitle = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-10\n        min-[744px]:col-start-1 min-[744px]:col-end-13\n        min-[375px]:col-span-4\n    `;\n\nexport const imgColLeft = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-2\n        min-[744px]:col-start-1 min-[744px]:col-end-3\n        min-[375px]:col-start-1 min-[375px]:col-end-2\n    `;\n\nexport const imgColRight = `\n        min-[1440px]:col-start-2 min-[1440px]:col-end-13\n        min-[744px]:col-start-3 min-[744px]:col-end-13\n        min-[375px]:col-start-2 min-[375px]:col-end-4\n    `;\n\nexport const hugeText = `\n        min-[1000px]:text-headerHuge \n        min-[375px]:text-headerHugeMain\n    `;","type ButtonType = {\n    title?: string;\n    background?: 'transparent' | 'white' | 'black';\n    image?: string;\n    sizeBtn?: 'huge' | 'small';\n    additionalImage?: 'google' | 'instagram' | '';\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\n    onClickHandler?: () => void;\n    disabled?: boolean;\n}\n\nexport const Button:React.FC<ButtonType> = ({ \n    title = '', \n    background = 'transparent', \n    image = '', \n    sizeBtn = 'small',\n    additionalImage = '',\n    type = 'button',\n    disabled = false,\n    onClickHandler,\n}) => {\n\n    const btnStyles = {\n        transparent: {\n            background: 'transparent',\n            color: 'black'\n        },\n        black: {\n            background: 'bg-black',\n            color: 'text-white',\n        },\n        white: {\n            background: 'bg-white',\n            color: 'text-black',\n        },\n        huge: `px-6 ${additionalImage ? 'py-3.5': 'py-4'} w-full`,\n        small: \"size-10 hover:border-white\",\n        google: {\n            additionalImage: \"bg-[url('/src/images/EnterIcon.svg')]\",\n        },\n        instagram: {\n            additionalImage: \"bg-[url('/src/images/Instagram.svg')]\"\n        }\n    };\n\n    const btnStyle = `relative block border disabled:bg-[#9AA5B1] disabled:border-0 min-[744px]:col-span-1` + \n    ` hover:bg-[transparent] outline-black min-[375px]:col-span-2 transition duration-300 ease-in-out` + \n    `border-black ${btnStyles[background].background} ${btnStyles[sizeBtn]} group max-w-[464px]`;\n\n    return (<button\n        type={type}\n        className={btnStyle}\n        onClick={onClickHandler}\n        disabled={disabled}\n        >\n        {title && (\n            <div className=\"flex justify-center items-center gap-2\">\n                <p className={`block text-btn text-nowrap font-lato ${btnStyles[background].color}`}>\n                    {title}\n                </p>\n\n                {additionalImage && <div className=\"relative block size-6\">\n                    <div className={`absolute top-[1px] block size-full ${btnStyles[additionalImage].additionalImage} bg-cover`}></div>\n                </div>}\n            </div>\n        )}\n\n        {image && (<>\n            <div className={`\n                absolute \n                top-[50%]\n                left-[50%]\n                transform \n                -translate-x-1/2 \n                -translate-y-1/2\n                block \n                size-6 \n                bg-[url('/src/images/Back.svg')] \n                bg-cover\n                transition duration-300 ease-in-out\n                opacity-100\n                group-hover:opacity-0\n                `}>\n            </div>\n\n            <div className={`\n                absolute \n                top-[50%]\n                left-[50%]\n                transform \n                -translate-x-1/2 \n                -translate-y-1/2\n                block \n                size-6 \n                bg-[url('/src/images/Back-hover.svg')] \n                bg-cover\n                transition duration-300 ease-in-out\n                opacity-0\n                group-hover:opacity-100\n                `}>\n            </div>\n        </>)}\n    </button>);\n}","import { Button } from \"./Button\";\n\nexport default Button;"],"names":["Card","_ref","title","options","imageSrc","_jsxs","className","children","_jsx","src","alt","map","opt","optionTitle","optionPrice","getRandomInt","min","max","Math","ceil","floor","random","ReceiptCreator","size","items","sum","setSum","useState","useLayoutEffect","reduce","prev","curr","price","item","Button","type","sizeBtn","background","active","setActive","_Fragment","onClick","IngredientList","allowMultiple","addToWish","activeCheck","setActiveCheck","useEffect","id","toString","disabled","CheckBox","includes","activeOption","find","el","prevOption","parseInt","idString","changed","ind","indexOf","slice","isSize","setActiveCheckHandler","Receipt","choosenProps","setChoosenProps","setSize","addShawermaComponent","useCallback","prop","isEdited","length","filter","catalogCreator","useMemo","catalogData","dataItem","data","push","catalogItems","catItem","catCr","CatalogPage","sectionStyles","Styles","navigate","useNavigate","image","onClickHandler","sectionLargeStyle","sectionStyle","sectionTabletStyle","sectionPhoneStyle","sectionSmallphoneStyle","forkBlue","titleHead","minTitleHead","cardChoice","betterMarkupLeft","betterMarkupRight","imgElse","imgElseTitle","imgColLeft","imgColRight","hugeText","additionalImage","btnStyles","transparent","color","black","white","huge","small","google","instagram","btnStyle"],"sourceRoot":""}