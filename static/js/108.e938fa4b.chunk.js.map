{"version":3,"file":"static/js/108.e938fa4b.chunk.js","mappings":"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","sources":["components/custom/Card/Card.tsx","components/custom/ReceiptCreator/ReceiptCreator.tsx","components/custom/IngredientList/IngredientList.tsx","components/custom/Receipt/index.ts","components/custom/Receipt/Receipt.tsx","components/custom/Loader/Loader.tsx","components/custom/IngredientList/index.ts","components/custom/CardModal/index.ts","components/custom/CardModal/CardModal.tsx","components/CatalogPage/index.ts","components/CatalogPage/CatalogPage.tsx","components/MainPage/styles.ts"],"sourcesContent":["import { DishIngredient } from \"../../../redux/types/dishTypes\";\n\ntype Option = {\n    id: number;\n    optionTitle: string;\n    optionPrice: string;\n};\n\nexport type CardType = {\n    id: number;\n    title: string;\n    imageSrc: string;\n    options: Option[];\n    defaultOptions: DishIngredient[];\n    ingredOptions: DishIngredient[];\n    onClickHandler?: () => void;\n};\n\nexport const Card: React.FC<CardType> = ({ title, options, imageSrc, onClickHandler }) => {\n    return (\n    <div className={`\n        block\n        min-[1000px]:col-span-3\n        min-[744px]:col-span-4\n        col-span-2\n        border-2\n        overflow-hidden\n        rounded-t-2xl\n        hover:cursor-pointer\n        group\n        `}\n        onClick={onClickHandler}\n        >\n        <div className=\"relative w-full pb-[105.6%] overflow-hidden\">\n            <img\n                src={imageSrc}\n                alt=\"Product\"\n                className={`\n                    absolute\n                    top-0 \n                    left-0 \n                    size-full \n                    object-cover \n                    duration-150 \n                    group-hover:scale-125 \n                `}\n            />\n        </div>\n\n        <div className={`\n            flex\n            flex-col\n            min-[1440px]:p-4\n            p-3\n            gap-4\n            bg-white\n            `}>\n            <h3 className={`\n                min-[1440px]:text-headerLessTablet\n                text-cardTitlePC\n                font-literata\n                italic\n            `}>{title}</h3>\n\n            <div className=\"flex flex-col gap-2\">\n                {options.map(opt => (\n                    <div className=\"flex justify-between\" key={opt.optionTitle + opt.optionPrice}>\n                        <p className={`\n                            block\n                            font-lato\n                            min-[1440px]:text-cardProp\n                            text-cardPropPC\n                            text-[#525A63]\n                        `}>\n                            {opt.optionTitle}\n                        </p>\n\n                        <p className={`\n                            block\n                            min-[1440px]:text-cardPrice\n                            text-cardPricePC\n                            font-literata\n                        `}>\n                            {opt.optionPrice} грн\n                        </p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>);\n}","import { useLayoutEffect, useState } from \"react\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport Button from \"../Button\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/tools/hooks\";\nimport { ChangeCartItemAction, AddToCartAction } from \"../../../actions/CartActions\";\nimport { DishCart } from \"../../../redux/types/dishTypes\";\nimport { faker } from \"@faker-js/faker\";\n\nexport type ReceiptProp = {\n    id: number;\n    title: string;\n    price: number;\n    disabled?: boolean;\n    isSize?: boolean;\n};\n\nexport type ReceiptType = {\n    size: ReceiptProp;\n    items: ReceiptProp[];\n    reset: () => void;\n};\n\nexport const ReceiptCreator: React.FC<ReceiptType> = ({ size, items, reset }) => {\n    const [sum, setSum] = useState(0);\n\n    const dispatch = useAppDispatch();\n    const cartItems = useAppSelector(state => state.cart);\n\n    useLayoutEffect(() => {\n        setSum(items.reduce((prev, curr) => prev + curr.price, 0) + size.price);\n    }, [items, size]);\n\n    const handleClick = () => {\n        if(size.id < 0 || items.length === 0) {\n            return;\n        }\n\n        reset();\n\n        const formedId = faker.string.uuid();\n\n        const newItem: DishCart = {\n            id: formedId,\n            hashId: 0,\n            title: 'Мій рецепт',\n            price: sum,\n            count: 1,\n            additionalCount: items.length,\n            imageSrc: 'images/self-receipt.png',\n            components: items.map(el => ({\n                id: el.id,\n                title: el.title,\n                price: el.price\n            })),\n        };\n\n        if (cartItems.find(el => el.id === formedId)) {\n            dispatch(ChangeCartItemAction({ id: formedId, payload: 1 }));\n        } else {\n            dispatch(AddToCartAction(newItem));\n        }\n    }\n\n    return (\n    <div className=\"border-2 rounded-t-2xl\">\n        <div className=\"w-full py-3\">\n            <div className=\"mx-auto w-[206px]\">\n                <div className=\"relative size-full pb-[130%]\">\n                    <div className={`\n                        absolute\n                        top-0\n                        left-0\n                        size-full\n                        bg-cover\n                        bg-[url('/src/images/Cooker.svg')]\n                        `}>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"block border-t-2 bg-white p-4\">\n            <div className=\"flex flex-col gap-6\">\n                <h3 className=\"min-[1440px]:text-headerLessTablet text-list font-literata italic\">Мій рецепт</h3>\n\n                <div className=\"flex gap-2 items-center\">\n                    <p className=\"block text-cardPrice font-literata italic text-[#1F2933]\">Розмір:</p> \n\n                    <p className=\"flex justify-between items-center w-full\">\n                        <span className={`\n                            block\n                            min-[1440px]:text-paragraph\n                            text-cardPropBiggerPC\n                            text-[#1F2933]\n                            font-lato\n                        `}>\n                            {size.title}\n                        </span>\n\n                        <span className={`\n                            block\n                            text-[#525A63]\n                            italic\n                            min-[1440px]:text-cardProp\n                            text-cardPropPC\n                            font-literata`}>\n                                {size.price} грн\n                            </span>\n                    </p> \n                </div>\n\n                <div className=\"block\">\n                    <p className=\"block text-cardPrice font-literata italic text-[#1F2933]\">Обрані:</p> \n\n                    <p className=\"flex items-center justify-between pt-[14px]\">\n                        <span className=\"block text-cardPropBiggerPC min-[1440px]:text-paragraph text-[#525A63]\">Капуста, огірок, помідор</span>\n                        <span className=\"block text-required italic text-[#525A63]\">Обов'язково</span>\n                    </p>\n                    \n                    <ul className=\"list-none p-0 pl-2\">\n                        {items.map(item => (\n                            <li className=\"pt-[14px]\" key={getRandomInt(1, 100) + item.price + item.title}>\n                                <p className=\"flex justify-between items-center w-full\">\n                                    <span className={`\n                                        block\n                                        min-[1440px]:text-paragraph\n                                        text-cardPropBiggerPC\n                                        text-[#1F2933]\n                                        font-lato\n                                    `}>\n                                        {item.title}\n                                    </span>\n\n                                    <span className={`\n                                        block\n                                        text-[#525A63]\n                                        italic\n                                        min-[1440px]:text-cardProp\n                                        text-cardPropPC\n                                        font-literata\n                                    `}>\n                                        +{item.price} грн\n                                    </span>\n                                </p> \n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"block\">\n                    <p className={`\n                        flex\n                        items-center\n                        gap-[2px]\n                        px-3\n                        py-1\n                        text-[#525A63]\n                        text-cook\n                        font-lato\n                        hover:cursor-pointer\n                    `}>\n                        <span className=\"block\">КБЖУ всього продукту</span>\n\n                        <span className=\"block p-1 size-8\">\n                            <span className=\"block size-full bg-[url('/src/images/Arrow_drop_down.svg')]\"></span>\n                        </span>\n                    </p>\n                </div>\n\n                <div className=\"block\">\n                    <p className=\"flex justify-end items-end gap-2 w-full text-right\">\n                        <span className=\"block text-cook text-[#1F2933] font-lato\">Разом: </span>\n                        <span className=\"block text-cardPrice text-[#1F2933] font-literata italic\">{sum} грн</span>\n                    </p>\n                </div>\n\n                <div className=\"block\">\n                    <Button\n                        title=\"Замовити\"\n                        type=\"button\"\n                        sizeBtn=\"huge\"\n                        background=\"black\"\n                        isBackWhite\n                        onClickHandler={handleClick}\n                    />\n\n                    <p className=\"block pt-3 text-cook text-[#525A63] font-lato\">\n                        Максимальна кількість інгредієнтів  - 7\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","import { useState } from \"react\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport CheckBox from \"../CheckBox\";\nimport { ReceiptProp } from \"../ReceiptCreator/ReceiptCreator\";\nimport React from \"react\";\n\nexport type IngredientListType = {\n    title: string;\n    options: ReceiptProp[];\n    allowMultiple?: boolean;\n    addToWish: (prop: ReceiptProp) => boolean;\n};\n\nexport const IngredientList: React.FC<IngredientListType> = ({ title, options, allowMultiple = false, addToWish }) => {\n    const [activeCheck, setActiveCheck] = useState<String>('');\n\n    const setActiveCheckHandler = (id: number) => {\n        const activeOption = options.find(el => el.id === id);\n        const prevOption = options.find(el => el.id === parseInt(activeCheck.toString()));\n        const idString = id.toString();\n\n        if (activeOption?.disabled) {\n            return;\n        }\n\n        if (allowMultiple) {\n            let changed = true;\n\n            if (activeOption) {\n                changed = addToWish(activeOption);\n            }\n\n            if (changed) {\n                if (activeCheck.includes(idString)) {\n                    const ind = activeCheck.indexOf(`[${idString}]`);\n    \n                    setActiveCheck(prev => prev.slice(0, ind) + prev.slice(ind + 4));\n                } else {\n                    setActiveCheck(prev => prev + `[${idString}]`);\n                }\n            }\n        } else {\n            if (activeOption) {\n                if (prevOption && idString !== prevOption.id.toString()) {\n                    addToWish(prevOption);\n                }\n                \n                addToWish(activeOption);\n                setActiveCheck(prev => {\n                    if (idString === prev) {\n                        return '';\n                    }\n\n                    return idString;\n                });\n            }\n        }\n    };\n\n    return (<div>\n        {title && <h4 className=\"font-literata italic text-list\">{title}</h4>}\n        \n        <ul className=\"flex flex-col gap-2 pt-2\">\n            {options.map(opt => (\n                <li className=\"flex justify-between items-center\" key={getRandomInt(1, 1000) + opt.price + opt.title}>\n                    <div className=\"block py-2\">\n                        <p className={\"font-lato text-paragraph \" + (opt.disabled ? \"text-[#525A63]\" : \"\")}>{opt.title}</p>\n                    </div>\n\n                    <div className=\"flex gap-2\">\n                        <p className=\"block py-3 text-[#525A63] italic text-cardProp font-literata\">\n                            {opt.price > 0 ? `${opt.price} грн` : ''}\n                        </p>\n\n                        <CheckBox\n                            disabled={opt.disabled}\n                            active={(activeCheck.includes(opt.id.toString()) || opt.disabled === true)}\n                            setActive={() => setActiveCheckHandler(opt.id)}\n                        />\n                    </div>\n                </li>\n            ))}\n        </ul>\n    </div>);\n};","import { Receipt } from \"./Receipt\";\n\nexport default Receipt;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { faker } from '@faker-js/faker';\nimport { useCallback, useMemo, useState } from \"react\";\nimport { ReceiptCreator, ReceiptProp } from \"../ReceiptCreator/ReceiptCreator\";\nimport { IngredientList, IngredientListType } from \"../IngredientList/IngredientList\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\n\nexport type OptionType = {\n    id: number;\n    title: string;\n    price: number;\n    isSize: boolean;\n    disabled: boolean;\n};\n\nexport type ReceiptType = {\n    title: string;\n    allowMultiple: boolean;\n    options: OptionType[];\n};\n\ntype ReceiptWrapper = {\n    data: ReceiptType[];\n};\n\nexport const Receipt: React.FC<ReceiptWrapper> = ({ data }) => {\n    const [choosenProps, setChoosenProps] = useState<ReceiptProp[]>([]);\n    const [size, setSize] = useState<ReceiptProp>({\n        id: -1,\n        title: 'Не визначено',\n        price: 0,\n    });\n    const [catalogRecreate, setCatalogRecreate] = useState(false);\n\n    const resetProps = () => {\n        setSize({\n            id: -1,\n            title: 'Не визначено',\n            price: 0,\n        });\n\n        setChoosenProps([]);\n        setCatalogRecreate(prev => !prev);\n    }\n\n    const addShawermaComponent = useCallback((prop: ReceiptProp) => {\n        let isEdited = true;\n\n        if (prop.isSize) {\n            setSize(prev => {\n                if  (prev.id === prop.id) {\n                    return {\n                        id: -1,\n                        title: 'Не визначено',\n                        price: 0,\n                    };\n                } else {\n                    return prop;\n                }\n            });\n\n            return isEdited;\n        }\n\n        setChoosenProps(prev => {\n            const item = prev.find(el => el.id === prop.id);\n\n            if (prev.length === 7 && !item) {\n                isEdited = false;\n                return prev;\n            }\n            \n            if (item) {\n                return prev.filter(el => el.id !== prop.id);\n            } else {\n                return [...prev, prop];\n            }\n        });\n\n        return isEdited;\n    }, []);\n\n    const catalogCreator: IngredientListType[] = useMemo(() => {\n        const catalogData:IngredientListType[] = [];\n\n        for (const dataItem of data) {\n            catalogData.push({\n                ...dataItem,\n                addToWish: addShawermaComponent\n            });\n        }\n\n        return  catalogData;\n    }, [addShawermaComponent, data]);\n\n    const catalogItems = useMemo(() => catalogCreator.map(catItem => (\n        <IngredientList\n            key={faker.string.uuid() + getRandomInt(1, 1000000)}\n            {...catItem}\n        />\n    )), [catalogCreator, catalogRecreate])\n\n\n    return (<div className=\"grid min-[744px]:grid-cols-12 grid-cols-4 min-[1440px]:gap-x-5 gap-x-4 gap-y-[52px]\">\n        <h2 className={`\n            min-[1440px]:text-headerLessMain\n            min-[744px]:text-headerLessTablet\n            text-paragraph\n            font-oswald\n            uppercase\n            min-[744px]:col-span-12\n            col-span-4\n        `}>\n            Або будь творцем – Складай свій власний рецепт!\n        </h2>\n\n        <div className={`\n            min-[1440px]:col-span-4\n            min-[1000px]:col-span-5\n            min-[744px]:col-span-6\n            col-span-4\n            min-[744px]:row-start-2\n            min-[744px]:row-end-3\n\n            row-start-3\n            row-end-4\n            `}>\n            <ReceiptCreator\n                size={size}\n                items={choosenProps}\n                reset={resetProps}\n            />\n        </div>\n\n        <div className={`\n            min-[1440px]:col-span-4\n            min-[1000px]:col-span-7\n            min-[744px]:col-span-6\n            col-span-4\n            row-start-2\n            row-end-3\n            `}>\n            <div className=\"block border-2\">\n                <div className=\"bg-[#FF8080] border-b-2 p-2\">\n                    <h4 className=\"font-literata text-black italic text-list\">Обери інгредіенти</h4>\n                </div>\n\n                <div className=\"flex flex-col gap-6 px-5 py-6 bg-white\">\n                    {catalogItems}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"min-[1440px]:block hidden col-span-4\">\n            <div className=\"flex size-full justify-center items-center\">\n                <div className=\"block w-[210px]\">\n                    <div className=\"block pb-[258%] bg-[url('/src/images/Vertel.svg')] bg-cover\"></div>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","import { useEffect } from \"react\";\n\nconst Loader = () => {\n    useEffect(() => {\n        document.body.style.overflow = \"hidden\";\n\n        return () => {\n            document.body.style.overflow = \"\";\n        }\n    }, []);\n\n    return (<div className={`\n        fixed\n        z-10\n        top-0\n        left-0\n        size-full\n        bg-[#0000008f]\n    `}>\n        <div className={`\n            absolute\n            top-[50%]\n            left-[50%]\n            block\n            w-[240px]\n            h-[280px]\n            bg-[url('/src/images/Loader.svg')]\n            bg-cover\n            bg-center\n            animate-scalest\n            origin-center\n        `}>\n\n        </div>\n        \n    </div>);\n}\n\nexport default Loader;","import { IngredientList } from \"./IngredientList\";\n\nexport default IngredientList;","import { CardModal } from \"./CardModal\";\n\nexport default CardModal;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport * as Styles from '../../MainPage/styles';\nimport IngredientList from \"../IngredientList\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport { IngredientListType } from \"../IngredientList/IngredientList\";\nimport { ReceiptProp } from \"../ReceiptCreator/ReceiptCreator\";\nimport Button from \"../Button\";\nimport { Dish, DishCart } from \"../../../redux/types/dishTypes\";\nimport { AddToCartAction, ChangeCartItemAction } from \"../../../actions/CartActions\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/tools/hooks\";\nimport { faker } from \"@faker-js/faker\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport type CardModalType = {\n    dish: Dish;\n    close: () => void;\n};\n\nexport const CardModal: React.FC<CardModalType> = ({ dish, close }) => {\n    const {\n        title,\n        addIngredientPriceOptions,\n        sizePriceOptions,\n        ingredientPriceOptions,\n        imageSrc\n    } = dish;\n\n    const navigate = useNavigate();\n\n    const dispatch = useAppDispatch();\n    const cartItems = useAppSelector(state => state.cart);\n\n    const [error, setError] = useState('');\n\n    const data: Omit<IngredientListType, 'addToWish'>[] = useMemo(() => [\n        {\n            title: \"\",\n            allowMultiple: false,\n            options: sizePriceOptions.map(item => ({\n                id: item.id,\n                title: item.title,\n                price: item.price,\n                isSize: true,\n                disabled: false\n            })) as unknown as ReceiptProp[],\n        },\n        {\n            title: \"Ще щось?\",\n            allowMultiple: true,\n            options: addIngredientPriceOptions.map(item => ({\n                id: item.id,\n                title: item.title,\n                price: item.price,\n                isSize: false,\n                disabled: false\n            })) as unknown as ReceiptProp[],\n        }\n    ], [addIngredientPriceOptions, sizePriceOptions]);\n\n    const [choosenProps, setChoosenProps] = useState<ReceiptProp[]>([]);\n    const [size, setSize] = useState<ReceiptProp>({\n        id: -1,\n        title: 'Не визначено',\n        price: 0,\n    });\n\n    const sectionStyles = `\n        ${Styles.sectionLargeStyle}\n    `;\n\n    const addShawermaComponent = useCallback((prop: ReceiptProp) => {\n        let isEdited = true;\n\n        if (prop.isSize) {\n            setSize(prev => {\n                if  (prev.id === prop.id) {\n                    return {\n                        id: -1,\n                        title: 'Не визначено',\n                        price: 0,\n                    };\n                } else {\n                    return prop;\n                }\n            });\n\n            return isEdited;\n        }\n\n        setChoosenProps(prev => {\n            const item = prev.find(el => el.id === prop.id);\n\n            if (prev.length === 7 && !item) {\n                isEdited = false;\n                return prev;\n            }\n            \n            if (item) {\n                return prev.filter(el => el.id !== prop.id);\n            } else {\n                return [...prev, prop];\n            }\n        });\n\n        return isEdited;\n    }, []);\n\n    const totalPrice = size.price + choosenProps.reduce((prev, curr) => prev + curr.price, 0);\n\n    const catalogCreator: IngredientListType[] = useMemo(() => {\n        const catalogData:IngredientListType[] = [];\n\n        for (const dataItem of data) {\n            catalogData.push({\n                ...dataItem,\n                addToWish: addShawermaComponent\n            });\n        }\n\n        return catalogData;\n    }, [addShawermaComponent, data]);\n\n    const catalogItems = useMemo(() => catalogCreator.map(catItem => (\n        <IngredientList\n            key={faker.string.uuid() + getRandomInt(1, 1000)}\n            {...catItem}\n        />\n    )), [catalogCreator]);\n\n    const addToCart = () => {\n        if(size.id < 0) {\n            setError('Оберіть розмір');\n\n            return false;\n        }\n\n        const formedId = dish.title + dish.imageSrc + (dish.id * totalPrice);\n\n        const newItem: DishCart = {\n            id: formedId,\n            hashId: dish.id,\n            title: dish.title,\n            price: totalPrice,\n            count: 1,\n            additionalCount: choosenProps.length,\n            imageSrc: dish.imageSrc,\n        };\n\n        if (cartItems.find(el => el.id === formedId)) {\n            dispatch(ChangeCartItemAction({ id: formedId, payload: 1 }));\n        } else {\n            dispatch(AddToCartAction(newItem));\n        }\n\n        close();\n\n        return true;\n    }\n\n    useEffect(() => {\n        document.body.style.overflow = \"hidden\";\n\n        return () => {\n            document.body.style.overflow = \"\";\n        }\n    }, []);\n\n    return createPortal(\n        <dialog\n        className={`\n            fixed\n            z-50\n            top-0\n            left-0\n            grid\n            grid-cols-12\n            size-full\n            bg-[#0000004D]\n            ${sectionStyles}\n        `}>\n            <div className={`\n                relative\n                w-full\n                col-span-12\n                min-[1000px]:col-start-3\n                min-[1000px]:col-end-13\n                min-[1440px]:col-end-12\n                min-[1440px]:col-start-2\n            `}>\n                <div className={`\n                    absolute\n                    grid\n                    grid-cols-12\n                    top-[50%]\n                    left-[50%]\n                    translate-x-[-50%]\n                    translate-y-[-50%]\n                    min-[1440px]:w-full\n                    size-full\n                    min-[1440px]:h-[580px]\n                    min-[1440px]:px-8\n                    max-[743px]:overflow-auto\n                `}>\n                    <div className={`\n                        hidden\n                        min-[744px]:block\n                        col-span-12\n                        min-[744px]:col-span-5\n                        min-[1440px]:col-span-6\n                    `}>\n                        <div className=\"relative size-full\">\n                            <img\n                                src={imageSrc}\n                                alt={imageSrc}\n                                className=\"absolute top-0 left-0 size-full object-cover\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className={`\n                        block\n                        col-span-12\n                        min-[744px]:col-span-7\n                        min-[1440px]:col-span-6\n                        border-y-2\n                        border-l-0\n                        min-[1440px]:border-r-2\n                        border-r-0\n                        h-full\n                        min-[744px]:overflow-hidden\n                    `}>\n                        <div className=\"flex flex-col size-full bg-white\">\n                            <div className=\"block h-[56px] w-full bg-[#FFB040] border-b-2\">\n                                <div className=\"flex h-full justify-between items-center pl-4\">\n                                    <h3 className={`\n                                        block\n                                        min-[744px]:text-cardModalMainTitle\n                                        text-cardModalMainTitlePhone\n                                        font-literata\n                                    `}>{title}</h3>\n\n                                    <div className=\"relative size-14 flex justify-center items-center p-4\">\n                                        <div\n                                            className=\"absoulute size-full bg-close_square bg-no-repeat hover:cursor-pointer\"\n                                            onClick={() => close()}\n                                        ></div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={`\n                                relative\n                                block\n                                min-[744px]:hidden\n                            `}>\n                                <div className=\"relative w-full h-[351px]\">\n                                    <img\n                                        src={imageSrc}\n                                        alt={imageSrc}\n                                        className=\"absolute top-0 left-0 size-full object-cover\"\n                                    />\n                                </div> \n                            </div>\n\n                            <div className={`\n                                flex\n                                flex-col\n                                gap-6\n                                py-6\n                                px-5\n                                min-[744px]:h-cardModal-height\n                                min-[1440px]:max-h-[524px]\n                                min-[744px]:overflow-auto\n                                min-[744px]:max-h-[100%]\n                            `}>\n                                <div>\n                                    <h4\n                                        className={`\n                                    font-literata\n                                    italic\n                                    text-cardPrice  \n                                    text-[#525A63]  \n                                    `}\n                                    >\n                                        Склад\n                                    </h4>\n\n                                    <ul className=\"flex flex-col pt-3 gap-2 list-none p-0\">\n                                        {ingredientPriceOptions.map(ing => (\n                                            <li key={ing.id}>\n                                                <p className=\"font-lato text-[#525A63] text-cardItemInner\">\n                                                    {ing.title}\n                                                </p>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n\n                                <div className=\"flex items-center gap-2\">\n                                    <p className=\"font-lato text-[#525A63] text-cardItemInner\">\n                                        КБЖУ всього продукту\n                                    </p>\n\n                                    <div className=\"relative block size-8\">\n                                        <div className=\"absolute block size-full bg-arrowDropDown bg-cover\"></div>\n                                    </div>\n                                </div>\n\n                                {catalogItems}\n\n                                <div>\n                                    <p className=\"flex gap-2 justify-end items-center\">\n                                        <span className=\"font-lato text-cardItemInner text-[#1F2933]\">Ціна</span>\n                                        <span className=\"font-literata text-cardPrice text-[#1F2933]\">{totalPrice} грн</span>\n                                    </p>\n\n                                    <div className=\"flex gap-2 pt-3\">\n                                        <Button\n                                            widthFull\n                                            title=\"Замовити\"\n                                            sizeBtn=\"huge\"\n                                            background=\"white\"\n                                            onClickHandler={() => {\n                                                const res = addToCart();\n                                                \n                                                if (res) {\n                                                    navigate('/order');\n                                                }\n                                            }}\n                                        />\n                                        \n                                        <Button\n                                            hasMaxWidth\n                                            hasSmallerSize={false}\n                                            image=\"cake\"\n                                            sizeBtn=\"small\"\n                                            background=\"black\"\n                                            onClickHandler={addToCart}\n                                        />\n                                    </div>\n\n                                    {error && <p className=\"pt-1 text-[#B20508] font-lato text-orderAuthDescPhone\">\n                                        {error}\n                                    </p>}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </dialog>,\n        document.body\n    );\n};\n\n","import { CatalogPage } from \"./CatalogPage\";\n\nexport default CatalogPage;","import { Await, useLoaderData, useNavigate } from \"react-router-dom\";\nimport Button from \"../custom/Button\";\nimport * as Styles from '../MainPage/styles';\nimport { Card, CardType } from \"../custom/Card/Card\";\nimport Receipt from \"../custom/Receipt\";\nimport { ReceiptType } from \"../custom/Receipt/Receipt\";\nimport { Suspense, useState } from \"react\";\nimport Loader from \"../custom/Loader/Loader\";\nimport cardData from './data/cardData.json';\nimport CardModal from \"../custom/CardModal\";\nimport { AdditionalDishIngredient, Dish, DishIngredient, DishSize } from \"../../redux/types/dishTypes\";\n\ntype LoaderData = {\n    data: Promise<ReceiptType[]>;\n}\n\nexport const CatalogPage: React.FC = () => {\n    const [open, setOpen] = useState(false);\n    const [currentDish, setCurrentDish] = useState<Dish|null>(null);\n\n    const sectionStyles = `\n        ${Styles.sectionLargeStyle}\n        ${Styles.sectionPhoneStyle}\n        ${Styles.sectionSmallphoneStyle}\n        ${Styles.sectionStyle}\n        ${Styles.sectionTabletStyle}\n    `;\n\n    const { data } = useLoaderData() as LoaderData;\n    const cardItems = cardData;\n\n    const navigate = useNavigate();\n\n    const onCardClickHandler = (el: CardType) => {\n        setOpen(true);\n        const dishSizes: DishSize[] = el.options.map(el => ({\n            id: el.id,\n            title: el.optionTitle,\n            price: el.optionPrice\n        } as unknown as DishSize));\n\n        const additionalItems = el.ingredOptions.map(item => ({\n            id: item.id,\n            title: item.title,\n            price: item.price\n        } as unknown as AdditionalDishIngredient));\n\n        const ingreds: DishIngredient[] = el.defaultOptions.map(item => ({\n            id: item.id,\n            title: item.title,\n            price: item.price\n        }));\n\n        setCurrentDish({\n            id: 1,\n            title: el.title,\n            sizePriceOptions: dishSizes,\n            ingredientPriceOptions: ingreds,\n            addIngredientPriceOptions: additionalItems,\n            imageSrc: el.imageSrc,\n        })\n    };\n\n    return (\n        <main className=\"relative pt-[90px] bg-[#FFE9DE]\">\n            {open && currentDish && <CardModal dish={currentDish} close={() => setOpen(false)} />}\n\n            <section className={`max-w-[1440px] m-auto ${sectionStyles}`}>\n                <Button image=\"back\" background=\"transparent\" onClickHandler={() => navigate(-1)} />\n            </section>\n\n            <section className={`max-w-[1440px] pt-3 m-auto ${sectionStyles}`}>\n                <h1 className={`\n                        min-[1440px]:text-headerLess\n                        font-oswald\n                        text-headerLessMain\n                        `}>\n                    Шаурма\n                </h1>\n            </section>\n\n            <section className={`max-w-[1440px] pb-[66px] pt-12 m-auto ${sectionStyles}`}>\n                <h3 className=\"text-headerLessTablet font-oswald uppercase font-medium\">Обирай наші смаки</h3>\n\n                <div className=\"grid min-[744px]:grid-cols-12 grid-cols-4 gap-x-4 gap-y-6 pt-3\">\n                    {(cardItems as unknown as CardType[]).map(el => (\n                        <Card\n                            key={el.imageSrc}\n                            {...(el as CardType)}\n                            onClickHandler={() => onCardClickHandler(el)}\n                        />\n                    ))}\n                </div>\n            </section>\n\n            <section className={`bg-[#9CC2FF] w-full pt-12 pb-[88px] ${sectionStyles} min-[375px]:px-[12px] border-t-2`}>\n                <Suspense fallback={<Loader />}>\n                    <Await resolve={data}>\n                        {(resolvedData) => (\n                            <Receipt data={resolvedData.data} />\n                        )}\n                    </Await>\n                </Suspense>\n            </section>\n        </main>\n    );\n}","export const sectionLargeStyle = \"min-[1440px]:px-10\";\nexport const sectionStyle = \"min-[1000px]:px-6\";\nexport const sectionTabletStyle = \"min-[744px]:px-[16px]\";\nexport const sectionPhoneStyle = \"min-[480px]:px-[16px]\";\nexport const sectionSmallphoneStyle = \"min-[375px]:px-[16px]\";\n\nexport const forkBlue = `\n        min-[1440px]:translate-x-negative-left-fork \n        min-[1000px]:translate-x-negative-left-fork-main\n        min-[375px]:translate-x-negative-left-fork-tablet\n        min-[1000px]:translate-y-negative-top-fork \n        min-[744px]:translate-y-negative-top-fork-tablet\n        min-[480px]:translate-y-negative-top-phonefork \n        min-[375px]:translate-y-negative-top-smallphonefork\n        min-[1440px]:w-[215px]\n        min-[744px]:w-[105px]\n        min-[1000px]:w-[139px]\n        min-[480px]:w-[100px]\n        min-[375px]:w-[74px]\n        `;\n\nexport const titleHead = `\n        min-[1440px]:text-headerHuge \n        min-[1000px]:text-headerHugeMain\n        min-[744px]:text-headerHugeTablet\n        min-[375px]:text-headerHugePhone\n    `;\n\nexport const minTitleHead = `\n        min-[1440px]:text-headerLess\n        min-[1000px]:text-headerLessMain\n        min-[375px]:text-headerLessTablet\n    `;\n\nexport const cardChoice = `\n        min-[1440px]:text-cardChoice\n        min-[1000px]:text-cardChoiceMain\n        min-[375px]:text-cardChoiceTablet\n    `;\n\nexport const betterMarkupLeft = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-7\n        min-[1000px]:col-start-1 min-[1000px]:col-end-8\n        min-[744px]:col-start-1 min-[744px]:col-end-10\n        min-[375px]:col-span-4\n    `;\n\nexport const betterMarkupRight = `\n        min-[1440px]:col-start-7 min-[1440px]:col-end-13\n        min-[744px]:col-start-1 min-[744px]:col-end-13\n        min-[375px]:col-span-4\n    `;\n\nexport const imgElse = `\n        min-[1440px]:size-[325px]\n        min-[1000px]:size-[300px]\n        min-[744px]:size-[215px]\n        min-[480px]:size-[200px]\n        min-[375px]:size-[163px]\n    `;\n\nexport const imgElseTitle = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-10\n        min-[744px]:col-start-1 min-[744px]:col-end-13\n        min-[375px]:col-span-4\n    `;\n\nexport const imgColLeft = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-2\n        min-[744px]:col-start-1 min-[744px]:col-end-3\n        min-[375px]:col-start-1 min-[375px]:col-end-2\n    `;\n\nexport const imgColRight = `\n        min-[1440px]:col-start-2 min-[1440px]:col-end-13\n        min-[744px]:col-start-3 min-[744px]:col-end-13\n        min-[375px]:col-start-2 min-[375px]:col-end-4\n    `;\n\nexport const hugeText = `\n        min-[1000px]:text-headerHuge \n        min-[375px]:text-headerHugeMain\n    `;"],"names":["Card","_ref","title","options","imageSrc","onClickHandler","_jsxs","className","onClick","children","_jsx","src","alt","map","opt","optionTitle","optionPrice","ReceiptCreator","size","items","reset","sum","setSum","useState","dispatch","useAppDispatch","cartItems","useAppSelector","state","cart","useLayoutEffect","reduce","prev","curr","price","item","getRandomInt","Button","type","sizeBtn","background","isBackWhite","handleClick","id","length","formedId","faker","string","uuid","newItem","hashId","count","additionalCount","components","el","find","ChangeCartItemAction","payload","AddToCartAction","IngredientList","allowMultiple","addToWish","activeCheck","setActiveCheck","disabled","CheckBox","active","includes","toString","setActive","activeOption","prevOption","parseInt","idString","changed","ind","indexOf","slice","setActiveCheckHandler","data","choosenProps","setChoosenProps","setSize","catalogRecreate","setCatalogRecreate","addShawermaComponent","useCallback","prop","isEdited","isSize","filter","catalogCreator","useMemo","catalogData","dataItem","push","catalogItems","catItem","resetProps","Loader","useEffect","document","body","style","overflow","dish","close","addIngredientPriceOptions","sizePriceOptions","ingredientPriceOptions","navigate","useNavigate","error","setError","sectionStyles","Styles","totalPrice","addToCart","createPortal","ing","widthFull","hasMaxWidth","hasSmallerSize","image","CatalogPage","open","setOpen","currentDish","setCurrentDish","useLoaderData","cardItems","cardData","CardModal","dishSizes","additionalItems","ingredOptions","ingreds","defaultOptions","onCardClickHandler","Suspense","fallback","Await","resolve","resolvedData","Receipt","sectionLargeStyle","sectionStyle","sectionTabletStyle","sectionPhoneStyle","sectionSmallphoneStyle","forkBlue","titleHead","minTitleHead","cardChoice","betterMarkupLeft","betterMarkupRight","imgElse","imgElseTitle","imgColLeft","imgColRight","hugeText"],"sourceRoot":""}