{"version":3,"file":"static/js/32.3cb66aa8.chunk.js","mappings":"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","sources":["components/custom/Card/Card.tsx","components/custom/ReceiptCreator/ReceiptCreator.tsx","components/custom/IngredientList/IngredientList.tsx","components/custom/Receipt/index.ts","components/custom/Receipt/Receipt.tsx","components/custom/Loader/Loader.tsx","components/CatalogPage/index.ts","components/CatalogPage/CatalogPage.tsx","components/MainPage/styles.ts"],"sourcesContent":["type Option = {\n    optionTitle: string;\n    optionPrice: string;\n};\n\nexport type CardType = {\n    title: string;\n    imageSrc: string;\n    options: Option[];\n};\n\nexport const Card: React.FC<CardType> = ({ title, options, imageSrc }) => {\n    return (\n    <div className={`\n        block\n        min-[1000px]:col-span-3\n        min-[744px]:col-span-4\n        col-span-2\n        border-2\n        overflow-hidden\n        rounded-t-2xl\n        `}>\n        <div className=\"relative w-full pb-[105.6%] overflow-hidden\">\n            <img\n                src={imageSrc}\n                alt=\"Product\"\n                className={`\n                    absolute\n                    top-0 \n                    left-0 \n                    size-full \n                    object-cover \n                    duration-150 \n                    hover:scale-125 \n                    cursor-pointer\n                `}\n            />\n        </div>\n\n        <div className={`\n            flex\n            flex-col\n            min-[1440px]:p-4\n            p-3\n            gap-4\n            bg-white\n            `}>\n            <h3 className={`\n                min-[1440px]:text-headerLessTablet\n                text-cardTitlePC\n                font-literata\n                italic\n            `}>{title}</h3>\n\n            <div className=\"flex flex-col gap-2\">\n                {options.map(opt => (\n                    <div className=\"flex justify-between\" key={opt.optionTitle + opt.optionPrice}>\n                        <p className={`\n                            block\n                            font-lato\n                            min-[1440px]:text-cardProp\n                            text-cardPropPC\n                            text-[#525A63]\n                        `}>\n                            {opt.optionTitle}\n                        </p>\n\n                        <p className={`\n                            block\n                            min-[1440px]:text-cardPrice\n                            text-cardPricePC\n                            font-literata\n                        `}>\n                            {opt.optionPrice} грн\n                        </p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>);\n}","import { useLayoutEffect, useState } from \"react\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport Button from \"../Button\";\n\nexport type ReceiptProp = {\n    id: number;\n    title: string;\n    price: number;\n    disabled?: boolean;\n    isSize?: boolean;\n};\n\nexport type ReceiptType = {\n    size: ReceiptProp;\n    items: ReceiptProp[];\n};\n\nexport const ReceiptCreator: React.FC<ReceiptType> = ({ size, items }) => {\n    const [sum, setSum] = useState(0);\n\n    useLayoutEffect(() => {\n        setSum(items.reduce((prev, curr) => prev + curr.price, 0) + size.price);\n    }, [items, size]);\n\n    return (\n    <div className=\"border-2 rounded-t-2xl\">\n        <div className=\"w-full py-3\">\n            <div className=\"mx-auto w-[206px]\">\n                <div className=\"relative size-full pb-[130%]\">\n                    <div className={`\n                        absolute\n                        top-0\n                        left-0\n                        size-full\n                        bg-cover\n                        bg-[url('/src/images/Cooker.svg')]\n                        `}>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div className=\"block border-t-2 bg-white p-4\">\n            <div className=\"flex flex-col gap-6\">\n                <h3 className=\"min-[1440px]:text-headerLessTablet text-list font-literata italic\">Мій рецепт</h3>\n\n                <div className=\"flex gap-2 items-center\">\n                    <p className=\"block text-cardPrice font-literata italic text-[#1F2933]\">Розмір:</p> \n\n                    <p className=\"flex justify-between items-center w-full\">\n                        <span className={`\n                            block\n                            min-[1440px]:text-paragraph\n                            text-cardPropBiggerPC\n                            text-[#1F2933]\n                            font-lato\n                        `}>\n                            {size.title}\n                        </span>\n\n                        <span className={`\n                            block\n                            text-[#525A63]\n                            italic\n                            min-[1440px]:text-cardProp\n                            text-cardPropPC\n                            font-literata`}>\n                                {size.price} грн\n                            </span>\n                    </p> \n                </div>\n\n                <div className=\"block\">\n                    <p className=\"block text-cardPrice font-literata italic text-[#1F2933]\">Обрані:</p> \n\n                    <p className=\"flex items-center justify-between pt-[14px]\">\n                        <span className=\"block text-cardPropBiggerPC min-[1440px]:text-paragraph text-[#525A63]\">Капуста, огірок, помідор</span>\n                        <span className=\"block text-required italic text-[#525A63]\">Обов'язково</span>\n                    </p>\n                    \n                    <ul className=\"list-none p-0 pl-2\">\n                        {items.map(item => (\n                            <li className=\"pt-[14px]\" key={getRandomInt(1, 100) + item.price + item.title}>\n                                <p className=\"flex justify-between items-center w-full\">\n                                    <span className={`\n                                        block\n                                        min-[1440px]:text-paragraph\n                                        text-cardPropBiggerPC\n                                        text-[#1F2933]\n                                        font-lato\n                                    `}>\n                                        {item.title}\n                                    </span>\n\n                                    <span className={`\n                                        block\n                                        text-[#525A63]\n                                        italic\n                                        min-[1440px]:text-cardProp\n                                        text-cardPropPC\n                                        font-literata\n                                    `}>\n                                        +{item.price}грн\n                                    </span>\n                                </p> \n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"block\">\n                    <p className={`\n                        flex\n                        items-center\n                        gap-[2px]\n                        px-3\n                        py-1\n                        text-[#525A63]\n                        text-cook\n                        font-lato\n                        hover:cursor-pointer\n                    `}>\n                        <span className=\"block\">КБЖУ всього продукту</span>\n\n                        <span className=\"block p-1 size-8\">\n                            <span className=\"block size-full bg-[url('/src/images/Arrow_drop_down.svg')]\"></span>\n                        </span>\n                    </p>\n                </div>\n\n                <div className=\"block\">\n                    <p className=\"flex justify-end items-end gap-2 w-full text-right\">\n                        <span className=\"block text-cook text-[#1F2933] font-lato\">Разом: </span>\n                        <span className=\"block text-cardPrice text-[#1F2933] font-literata italic\">{sum}грн</span>\n                    </p>\n                </div>\n\n                <div className=\"block\">\n                    <Button\n                        title=\"Замовити\"\n                        type=\"button\"\n                        sizeBtn=\"huge\"\n                        background=\"black\"\n                        isBackWhite\n                    />\n\n                    <p className=\"block pt-3 text-cook text-[#525A63] font-lato\">\n                        Максимальна кількість інгредієнтів  - 7\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","import { useState } from \"react\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\nimport CheckBox from \"../CheckBox\";\nimport { ReceiptProp } from \"../ReceiptCreator/ReceiptCreator\";\nimport React from \"react\";\n\nexport type IngredientListType = {\n    title: string;\n    options: ReceiptProp[];\n    allowMultiple?: boolean;\n    addToWish: (prop: ReceiptProp) => boolean;\n};\n\nexport const IngredientList: React.FC<IngredientListType> = ({ title, options, allowMultiple = false, addToWish }) => {\n    const [activeCheck, setActiveCheck] = useState<String>('');\n\n    // useEffect(() =>  {\n    //     if (allowMultiple) {\n    //         setActiveCheck('');\n    //     } else {\n    //         if (options[0]) {\n    //            setActiveCheck(options[0].id.toString());\n    //         }\n    //     }\n    // }, [allowMultiple, options]);\n\n    const setActiveCheckHandler = (id: number) => {\n        const activeOption = options.find(el => el.id === id);\n        const prevOption = options.find(el => el.id === parseInt(activeCheck.toString()));\n        const idString = id.toString();\n\n        if (activeOption?.disabled) {\n            return;\n        }\n\n        if (allowMultiple) {\n            let changed = true;\n\n            if (activeOption) {\n                changed = addToWish(activeOption);\n            }\n\n            if (changed) {\n                if (activeCheck.includes(idString)) {\n                    const ind = activeCheck.indexOf(`[${idString}]`);\n    \n                    setActiveCheck(prev => prev.slice(0, ind) + prev.slice(ind + 4));\n                } else {\n                    setActiveCheck(prev => prev + `[${idString}]`);\n                }\n            }\n        } else {\n            if (activeOption) {\n                if (prevOption && idString !== prevOption.id.toString()) {\n                    addToWish(prevOption);\n                }\n                \n                addToWish(activeOption);\n                setActiveCheck(prev => {\n                    if (idString === prev) {\n                        return '';\n                    }\n\n                    return idString;\n                });\n            }\n        }\n    };\n\n    return (<div>\n        {title && <h4 className=\"font-literata italic text-list\">{title}</h4>}\n        \n        <ul className=\"flex flex-col gap-2 pt-2\">\n            {options.map(opt => (\n                <li className=\"flex justify-between items-center\" key={getRandomInt(1, 1000) + opt.price + opt.title}>\n                    <div className=\"block py-2\">\n                        <p className={\"font-lato text-paragraph \" + (opt.disabled ? \"text-[#525A63]\" : \"\")}>{opt.title}</p>\n                    </div>\n\n                    <div className=\"flex gap-2\">\n                        <p className=\"block py-3 text-[#525A63] italic text-cardProp font-literata\">\n                            {opt.price > 0 ? `${opt.price} грн` : ''}\n                        </p>\n\n                        <CheckBox\n                            active={(activeCheck.includes(opt.id.toString()) || opt.disabled === true)}\n                            setActive={() => setActiveCheckHandler(opt.id)}\n                        />\n                    </div>\n                </li>\n            ))}\n        </ul>\n    </div>);\n};","import { Receipt } from \"./Receipt\";\n\nexport default Receipt;","import { useCallback, useMemo, useState } from \"react\";\nimport { ReceiptCreator, ReceiptProp } from \"../ReceiptCreator/ReceiptCreator\";\nimport { IngredientList, IngredientListType } from \"../IngredientList/IngredientList\";\nimport { getRandomInt } from \"../../../tools/randomFunc\";\n\nexport type OptionType = {\n    id: number;\n    title: string;\n    price: number;\n    isSize: boolean;\n    disabled: boolean;\n};\n\nexport type ReceiptType = {\n    title: string;\n    allowMultiple: boolean;\n    options: OptionType[];\n};\n\ntype ReceiptWrapper = {\n    data: ReceiptType[];\n};\n\nexport const Receipt: React.FC<ReceiptWrapper> = ({ data }) => {\n    const [choosenProps, setChoosenProps] = useState<ReceiptProp[]>([]);\n    const [size, setSize] = useState<ReceiptProp>({\n        id: -1,\n        title: 'Не визначено',\n        price: 0,\n    });\n\n    const addShawermaComponent = useCallback((prop: ReceiptProp) => {\n        let isEdited = true;\n\n        if (prop.isSize) {\n            setSize(prev => {\n                if  (prev.id === prop.id) {\n                    return {\n                        id: -1,\n                        title: 'Не визначено',\n                        price: 0,\n                    };\n                } else {\n                    return prop;\n                }\n            });\n\n            return isEdited;\n        }\n\n        setChoosenProps(prev => {\n            const item = prev.find(el => el.id === prop.id);\n\n            if (prev.length === 7 && !item) {\n                isEdited = false;\n                return prev;\n            }\n            \n            if (item) {\n                return prev.filter(el => el.id !== prop.id);\n            } else {\n                return [...prev, prop];\n            }\n        });\n\n        return isEdited;\n    }, []);\n\n    const catalogCreator: IngredientListType[] = useMemo(() => {\n        const catalogData:IngredientListType[] = [];\n\n        for (const dataItem of data) {\n            catalogData.push({\n                ...dataItem,\n                addToWish: addShawermaComponent\n            });\n        }\n\n        return  catalogData;\n    }, [addShawermaComponent, data]);\n\n    const catalogItems = useMemo(() => catalogCreator.map(catItem => (\n        <IngredientList\n            key={catItem.title + getRandomInt(1, 1000)}\n            {...catItem}\n        />\n    )), [catalogCreator])\n\n    // useEffect(() => {\n    //     for (const catCr of catalogCreator) {\n    //         if (catCr.options.length > 0 && !catCr.allowMultiple) {\n    //             if (catCr.title || (catCr.options.length > 0 && catCr.options[0].isSize)) {\n    //                 addShawermaComponent(catCr.options[0]);\n    //             }\n    //         }\n    //     }\n    // }, [addShawermaComponent, catalogCreator]);\n\n\n    return (<div className=\"grid min-[744px]:grid-cols-12 grid-cols-4 min-[1440px]:gap-x-5 gap-x-4 gap-y-[52px]\">\n        <h2 className={`\n            min-[1440px]:text-headerLessMain\n            min-[744px]:text-headerLessTablet\n            text-paragraph\n            font-oswald\n            uppercase\n            min-[744px]:col-span-12\n            col-span-4\n        `}>\n            Або будь творцем – Складай свій власний рецепт!\n        </h2>\n\n        <div className={`\n            min-[1440px]:col-span-4\n            min-[1000px]:col-span-5\n            min-[744px]:col-span-6\n            col-span-4\n            min-[744px]:row-start-2\n            min-[744px]:row-end-3\n\n            row-start-3\n            row-end-4\n            `}>\n            <ReceiptCreator\n                size={size}\n                items={choosenProps}\n            />\n        </div>\n\n        <div className={`\n            min-[1440px]:col-span-4\n            min-[1000px]:col-span-7\n            min-[744px]:col-span-6\n            col-span-4\n            row-start-2\n            row-end-3\n            `}>\n            <div className=\"block border-2\">\n                <div className=\"bg-[#FF8080] border-b-2 p-2\">\n                    <h4 className=\"font-literata text-black italic text-list\">Обери інгредіенти</h4>\n                </div>\n\n                <div className=\"flex flex-col gap-6 px-5 py-6 bg-white\">\n                    {catalogItems}\n                </div>\n            </div>\n        </div>\n\n        <div className=\"min-[1440px]:block hidden col-span-4\">\n            <div className=\"flex size-full justify-center items-center\">\n                <div className=\"block w-[210px]\">\n                    <div className=\"block pb-[258%] bg-[url('/src/images/Vertel.svg')] bg-cover\"></div>\n                </div>\n            </div>\n        </div>\n    </div>);\n}","import { useEffect } from \"react\";\n\nconst Loader = () => {\n    useEffect(() => {\n        document.body.style.overflow = \"hidden\";\n\n        return () => {\n            document.body.style.overflow = \"\";\n        }\n    }, []);\n\n    return (<div className={`\n        fixed\n        z-10\n        top-0\n        left-0\n        size-full\n        bg-[#0000008f]\n    `}>\n        <div className={`\n            absolute\n            top-[50%]\n            left-[50%]\n            block\n            w-[240px]\n            h-[280px]\n            bg-[url('/src/images/Loader.svg')]\n            bg-cover\n            bg-center\n            animate-scalest\n            origin-center\n        `}>\n\n        </div>\n        \n    </div>);\n}\n\nexport default Loader;","import { CatalogPage } from \"./CatalogPage\";\n\nexport default CatalogPage;","import { Await, useLoaderData, useNavigate } from \"react-router-dom\";\nimport Button from \"../custom/Button\";\nimport * as Styles from '../MainPage/styles';\nimport { Card, CardType } from \"../custom/Card/Card\";\nimport Receipt from \"../custom/Receipt\";\nimport { ReceiptType } from \"../custom/Receipt/Receipt\";\nimport { Suspense } from \"react\";\nimport Loader from \"../custom/Loader/Loader\";\nimport cardData from './data/cardData.json';\n\ntype LoaderData = {\n    data: Promise<ReceiptType[]>;\n}\n\nexport const CatalogPage: React.FC = () => {\n    const sectionStyles = `\n        ${Styles.sectionLargeStyle}\n        ${Styles.sectionPhoneStyle}\n        ${Styles.sectionSmallphoneStyle}\n        ${Styles.sectionStyle}\n        ${Styles.sectionTabletStyle}\n    `;\n\n    const { data } = useLoaderData() as LoaderData;\n\n    const navigate = useNavigate();\n\n    return (\n        <main className=\"relative pt-[90px] bg-[#FFE9DE]\">\n            <section className={`max-w-[1440px] m-auto ${sectionStyles}`}>\n                <Button image=\"Back.svg\" hasGreenBack background=\"transparent\" onClickHandler={() => navigate(-1)} />\n            </section>\n\n            <section className={`max-w-[1440px] pt-3 m-auto ${sectionStyles}`}>\n                <h1 className={`\n                        min-[1440px]:text-headerLess\n                        font-oswald\n                        text-headerLessMain\n                        `}>\n                    Шаурма\n                </h1>\n            </section>\n\n            <section className={`max-w-[1440px] pb-[66px] pt-12 m-auto ${sectionStyles}`}>\n                <h3 className=\"text-headerLessTablet font-oswald uppercase font-medium\">Обирай наші смаки</h3>\n\n                <div className=\"grid min-[744px]:grid-cols-12 grid-cols-4 gap-x-4 gap-y-6 pt-3\">\n                    {(cardData as unknown as CardType[]).map(el => (\n                        <Card\n                            key={el.imageSrc}\n                            {...(el as CardType)}\n                        />\n                    ))}\n                </div>\n            </section>\n\n            <section className={`bg-[#9CC2FF] w-full pt-12 pb-[88px] ${sectionStyles} min-[375px]:px-[12px] border-t-2`}>\n                <Suspense fallback={<Loader />}>\n                    <Await resolve={data}>\n                        {(resolvedData) => (\n                            <Receipt data={resolvedData.data} />\n                        )}\n                    </Await>\n                </Suspense>\n            </section>\n        </main>\n    );\n}","export const sectionLargeStyle = \"min-[1440px]:px-10\";\nexport const sectionStyle = \"min-[1000px]:px-6\";\nexport const sectionTabletStyle = \"min-[744px]:px-[16px]\";\nexport const sectionPhoneStyle = \"min-[480px]:px-[16px]\";\nexport const sectionSmallphoneStyle = \"min-[375px]:px-[16px]\";\n\nexport const forkBlue = `\n        min-[1440px]:translate-x-negative-left-fork \n        min-[1000px]:translate-x-negative-left-fork-main\n        min-[375px]:translate-x-negative-left-fork-tablet\n        min-[1000px]:translate-y-negative-top-fork \n        min-[744px]:translate-y-negative-top-fork-tablet\n        min-[480px]:translate-y-negative-top-phonefork \n        min-[375px]:translate-y-negative-top-smallphonefork\n        min-[1440px]:w-[215px]\n        min-[744px]:w-[105px]\n        min-[1000px]:w-[139px]\n        min-[480px]:w-[100px]\n        min-[375px]:w-[74px]\n        `;\n\nexport const titleHead = `\n        min-[1440px]:text-headerHuge \n        min-[1000px]:text-headerHugeMain\n        min-[744px]:text-headerHugeTablet\n        min-[375px]:text-headerHugePhone\n    `;\n\nexport const minTitleHead = `\n        min-[1440px]:text-headerLess\n        min-[1000px]:text-headerLessMain\n        min-[375px]:text-headerLessTablet\n    `;\n\nexport const cardChoice = `\n        min-[1440px]:text-cardChoice\n        min-[1000px]:text-cardChoiceMain\n        min-[375px]:text-cardChoiceTablet\n    `;\n\nexport const betterMarkupLeft = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-7\n        min-[1000px]:col-start-1 min-[1000px]:col-end-8\n        min-[744px]:col-start-1 min-[744px]:col-end-10\n        min-[375px]:col-span-4\n    `;\n\nexport const betterMarkupRight = `\n        min-[1440px]:col-start-7 min-[1440px]:col-end-13\n        min-[744px]:col-start-1 min-[744px]:col-end-13\n        min-[375px]:col-span-4\n    `;\n\nexport const imgElse = `\n        min-[1440px]:size-[325px]\n        min-[1000px]:size-[300px]\n        min-[744px]:size-[215px]\n        min-[480px]:size-[200px]\n        min-[375px]:size-[163px]\n    `;\n\nexport const imgElseTitle = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-10\n        min-[744px]:col-start-1 min-[744px]:col-end-13\n        min-[375px]:col-span-4\n    `;\n\nexport const imgColLeft = `\n        min-[1440px]:col-start-1 min-[1440px]:col-end-2\n        min-[744px]:col-start-1 min-[744px]:col-end-3\n        min-[375px]:col-start-1 min-[375px]:col-end-2\n    `;\n\nexport const imgColRight = `\n        min-[1440px]:col-start-2 min-[1440px]:col-end-13\n        min-[744px]:col-start-3 min-[744px]:col-end-13\n        min-[375px]:col-start-2 min-[375px]:col-end-4\n    `;\n\nexport const hugeText = `\n        min-[1000px]:text-headerHuge \n        min-[375px]:text-headerHugeMain\n    `;"],"names":["Card","_ref","title","options","imageSrc","_jsxs","className","children","_jsx","src","alt","map","opt","optionTitle","optionPrice","ReceiptCreator","size","items","sum","setSum","useState","useLayoutEffect","reduce","prev","curr","price","item","getRandomInt","Button","type","sizeBtn","background","isBackWhite","IngredientList","allowMultiple","addToWish","activeCheck","setActiveCheck","disabled","CheckBox","active","includes","id","toString","setActive","activeOption","find","el","prevOption","parseInt","idString","changed","ind","indexOf","slice","setActiveCheckHandler","data","choosenProps","setChoosenProps","setSize","addShawermaComponent","useCallback","prop","isEdited","isSize","length","filter","catalogCreator","useMemo","catalogData","dataItem","push","catalogItems","catItem","Loader","useEffect","document","body","style","overflow","CatalogPage","sectionStyles","Styles","useLoaderData","navigate","useNavigate","image","hasGreenBack","onClickHandler","cardData","Suspense","fallback","Await","resolve","resolvedData","Receipt","sectionLargeStyle","sectionStyle","sectionTabletStyle","sectionPhoneStyle","sectionSmallphoneStyle","forkBlue","titleHead","minTitleHead","cardChoice","betterMarkupLeft","betterMarkupRight","imgElse","imgElseTitle","imgColLeft","imgColRight","hugeText"],"sourceRoot":""}